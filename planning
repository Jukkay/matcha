"This project is about creating a dating website.

You will need to create an app allowing two potential lovers to meet,
from the registration to the final encounter.

A user will then be able to register, connect, fill his/her profile, search and look into
the profile of other users, like them, chat with those that “liked” back."

Illustrations https://undraw.co/

# API structure
    user
        post
        get
        patch
        delete
    likes
        get
        post
        delete
    matches
        get
        delete
    login
        post
    logout
        post

# Requirements
V Sign up
    User information
        email
        username
        firstname
        lastname
        password
   V Email confirmation
V Login
V Logout
V Password reset
Fill profile information after first login
    Don't allow access to other parts of the site until this is completed.
    Gender
    Sexual preference
    Profile text
    "Interested in" tags
    Pictures (max 5)
        Choose one as profile picture
Control panel
    Change user information
Edit profile
Show profile views
Show who liked you
"Fame rating"
    Show in profile
GPS location
    Geolocation API
    Locate with ip if GPS is not allowed
        https://openbase.com/js/geoip-lite
    Allow user to change GPS position in profile
Browsing
    Show suggestions that match preferences
    Match
        Sexual preference
        Location
        Maximum common tags
        With maximum fame rating
    Prioritise people from same area
    Sort by
        Age
        Location
        Fame rating
        Common tags
Advanced search
    Age gap
    Fame rating gap
    Location
    Interest tag
        One or more
    Sort and filter by same as previously
    Filtering (can be same as the search?)
Profile of other users
    Visits to profile must be stored to user's visit history
    Notification of visit to profile owner
    Show
        all profile information
        Fame rating
        Online/Offline
        Last login date and time
        If likes you
    Like
        Must have at least one picture to like someone
        If both like each other they're matched
            Allows chatting
    Unlike
    Report fake account
    Block user
        Hides blocked user from search
        Disables chat
        Removes notifications
Chat
    Available when users like each other
    Notification for new message must be available on any page
Notifications
    Likes
    Profile views
    New messages
    Liked user liked back
    Connected user unliked
    Notifications visible on any page
Database
    relational or graph
    Can't be noSQL
    Build your own ORM
Bonuses
    Facebook/google login/signup
    Facebook picture import
    Interactive map of the users
    Webcam integration
    Notification settings

# Todo

V registration input validation
V fix outgoing email
V Make login form
V Add Name input validation
V Add token check middleware to api
V Save token in client end
V make navbar change with login state
V Add token to queries
V implement token refresh functionality on server side
V Add a button to send new email token message to error message
V Password reset form
V New profile page
V Add selected interests to the top of the text input
V Add birthdate to signup form
V Add age range to profile form
V Get user's age from db
V Make user's age default value for age range fields
V Re-order profile so own profile and "looking for" are their own sections
V Add picture upload (File API)
V Make server side receive pictures and save them to database
V Fix problem with userData received from API on Login not being saved to State

Save profile information to db
Add existing userdata as default values on profile page
Show users uploaded images on profile page 
Redirect to page after first login

Make sure user is authorized to make api changes in all routes

Show image counter
Show upload complete notification

# Later
Move API url to docker secrets
Make separate errorHandler for catch blocks
Remove error message passthrough in user controller
Refactor interceptors to another file so they can use context instead of sessionStorage
Double slider for age range

# Bonuses done
JTW refresh automation
Live search with interests